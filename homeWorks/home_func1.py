# list_1 = [5.97, 6, "tom", 3.14, "bob", "alice", 5, -35, "nursultan", 42, "ulukbek", "edil", 91, "nurlan", 1.5, 27.9]
# def ret_func(capitilize):
#     list_of_names = [x.title() for x in capitilize if str == type(x)]
#     # list_of_names.sort()
#     print(sorted(list_of_names))
    
# ret_func(list_1)  


#  Написать функцию которая будет принимать этот список в качестве аргумента. Далее функция должна ВЕРНУТЬ список состоящий из имен(строковых значений) и чтобы эти имена были с заглавной буквы и в алфавитном порядке
# Написать функцию которая будет принимать этот список в качестве аргумента. Далее функция должна ВЫВЕСТИ НА КОНСОЛЬ список из целочисленных значений в отсортированном виде но в обратном порядке, т.е от большого к маленькому
# def konsol(arg):
#     list_of_digits = [x for x in arg if int == type(x)]
#     list_of_digits.sort(reverse=True)
#     print(list_of_digits)

# konsol(list_1)  


# Написать функцию которая будет принимать этот список в качестве аргумента. Далее функция должна ВЕРНУТЬ сложение всех чисел с плавающей точкой
# def float_sum(sum):
#     count = 0
#     for i in sum:
#         if float == type(i):
#             count += i
#     return count
# print(float_sum(list_1))
 
# Задание 2.
# Сэндвичи: напишите функцию, которая получает первым аргументом размер сэндвича в виде строкового значения и список компонентов сэндвича.

# При вызове функции, функция должна выводить описание заказанного сэндвича например «Большой сэндвич со следующими ингредиентами: огурец, колбаса … » . Вызовите функцию три раза с разными количествами аргументов и разными размерами (Большой, средний, маленький)4
# user = input('Введите размер сендвича: ')
# user2 = input('Введите компоненты сендвича: ').split()

# def sandwich(size_of_sandwich, components):
#     if user == 'Большой':
#         print(f'{user},сендвич со следующими ингридентами: {components}')
    
#     elif user == 'Средний':
#         print(f'{user},сендвич со следующими ингридентами: {components}')
    
#     elif user == 'Маленький':
#         print(f'{user},сендвич со следующими ингридентами: {components}')
    
#     return size_of_sandwich , components

# sandwich(user,user2)




# Задание 3.
# Напишите функцию для сохранения информации об автомобиле в словаре . Функция всегда должна возвращать производителя и название модели, но при этом она может получать произвольное количество именованных аргументов . Вызовите функцию с передачей обязательной информации и еще двух пар «имя—значение» (например, цвет и комплектация) . Ваша функция должна работать для вызовов следующего вида: car = make_car(‘subaru’, ‘outback’, colour=’blue’, engine='V8') и возвращать строку" Subaru Outback colour is blue, engine is V8

# def make_car(company, model,engine, **kwargs):

#     for key, values in kwargs.items():
#         print(f'{company} {model} {key} is {values} , engine is {engine}')
        
        
# make_car('subary', 'forester','V8', colour='green')

# Задача 4

# Напишите функцию count_letters, которая принимает на вход текст и подсчитывает, какое в нём количество цифр и букв. Функция должна вывести на экран информацию о найденных буквах и цифрах в определённом формате.

# Реализовать в цикле while, для выхода пользователь должен ввести "выход"
# user_text = input('Введите текст: ')
# search_digits_in_user_text = input('Какую цифру ищем? ')
# search_letters_in_user_text = input('Какую букву ищем? ')

# def count_letters(text,digit,letter):
#     count1 = 0
#     count2 = 0
#     for i in text:
#         if digit == i:
#             count1 += 1
#         elif letter == i:
#             count2 += 1
   
#     print(f'Количество цифр {digit}:{count1} ')
#     print(f'Количество букв {letter}:{count2} ')


# count_letters(user_text,search_digits_in_user_text, search_letters_in_user_text)

# Пример:

# Введите текст: 100 лет в обед

# Какую цифру ищем? 0

# Какую букву ищем? л

 

# Количество цифр 0: 2

# Количество букв л: 1

# Задача 5.

# Напишите функцию, которая в виде аргумента принимает словарь (данные с именами и должностями , где ключ это имя работника,  а значение его должность. Функция должна вернуть предложения, типа:  
# Работник Асан, занимает должность Директор
# name = {
#     'Anvar': 'Tech support',
#     'Sanzhar': 'Mentor',
#     'Abdulla': 'Student'
# }
# def dict_(dict_name):
#     for key,value in dict_name.items():
#         print(f'Работник {key}, Занимает должность {value}')
    
# dict_(name)   

# Задача 6 (дополнительно)

# Напишите программу, которая будет суммировать все числа, введенные пользователем, игнорируя при этом нечисловой ввод. Выводите на экран текущую сумму чисел после каждого очередного ввода. Ввод пользователем значения, не являющегося числовым, должен приводить к появлению соответствующего предупреждения, после чего пользователю должно быть предложено ввести следующее число. Выход из программы будет осуществляться путем пропуска ввода. Удостоверьтесь, что ваша программа корректно обрабатывает целочисленные значения и числа с плавающей запятой. 



def sum():
    coun = 0
    while True:
        try:
            user1 = float(input('Введите число: '))
            if user1 == 0:
                break
        except ValueError:
            print('Ты ввел неправильные данные!!')
            continue
        else:
            coun = coun + user1
        print(coun)
        
    return(coun)

print(sum())

        



# Пример:

# Введите число: 1

# Сумма: 1

# Введите число: 2

# Сумма: 3

# Введите число: 5

# Сумма: 8

# Введите число: кукарача

# Ошибка, введите только числа

# Введите число: 12

# Сумма: 20 (т.е. сумма не обнуляется, а продолжает "считать" (8 + 12 = 20)

 


