# Даны 2 списка:

# list_a = [1, 2, 39, 5, -6, 7, 8.1, 9, 10, -43, -134, 3.14, 2.55, 'Lenovo', 'Acer', 'Asus']

# list_b  = [123, -1.85, 43, -4.4, 8.16, - 5, 3.26, 21, 22, -43.97, 'Dell', 'HP', 'Lenove','Acer' ]

# Создать новые списки и вывести их результаты:


# Где будут только целые числа, которые больше 4
# Где будут только числа с плавающей точкой, имеющие отрицательное значение
# Где будут только наименования производителей ноутбуков
# Продолжить работу со списками, содержащие цифры и вывести их результат:

# ls_int = []
# ls_float = []
# ls_str = []

# for i in list_a + list_b:
#     if type(i)== int:
#         if i > 4:
#             ls_int.append(i)
#     elif type(i) == float and i < 0:
#         ls_float.append(i)
#     elif type(i) == str:
#         ls_str.append(i)


# print(ls_int)
# print(ls_float)
# print(ls_str)


#  Вставить в середину каждого списка новое значение(любое)
# len1 = len(ls_int) // 2
# ls_int.insert(len1, 789)
# print(len1)
# print(ls_int)
# len2 = len(ls_float) // 2
# ls_float.insert(len2, 89)
# print(ls_float)
# len3 = len(ls_str) // 2
# ls_str.insert(len3, 1968)
# print(ls_str)

# sum1 = sum(ls_int)
# sum2 = sum(ls_float)
# print(sum1, sum2)


# Найти сумму элементов в каждом списке
# Посчитать количество элементов в каждом списке
# print(len(ls_float),len(ls_int), len(ls_str))

# В списках с наименованиями (вывести результат):
# str2 = set(ls_str)
# print(str2)
# str3 = list(str2)
# print(str3)
# str3.insert(0, 'Apple')
# str3.append('Samsung')
# print(str3)

# Проверить наличие повторяющихся данных, если есть удалить.
# Добавить в начало и конец по одному производителю.








# Задание 2 (20 баллов)

# Напишите программу имитирует регистрацию пользователя.

# Программа должна запросить у Вас:

# Name

# Email

# Password

# Программа должна вывести сообщение:
# <name>, Вы успешно зарегистрировались, информация отправлена на <Email>

# Используйте разные методы форматирования сторок (5 методов) и напишите в комментариях какой метод вам больше всего понравился и почему.

# string.Template

# сишный стиль

# f-строки

# str.format()

# из этого списка форматирование списков мне понравился f - строки потому что он удобен в использовании


# userName = input('Enter your name: ')
# if userName[-1].isalpha():
#     raise ValueError(
#         'You name has to contain digits!'
#     )

# userEmail = input('Enter your email: ')
# if userEmail[-3 ::] != '.kg':
#     raise ValueError('Your email has to end with .kg!!')

# userPassword = input('Enter your password: ')
# if userPassword.isalpha():
#     raise ValueError('Your password has to contain only digits!!')

# print(f'{userName}, Вы успешно зарегистрировались, информация отправлена на вашу почту {userEmail}')
# print('{}, Вы успешно зарегистрировались, информация отправлена на вашу почту {}'.format(userName, userEmail))
# print('%s, Вы успешно зарегистрировались, информация отправлена на вашу почту %s'%(userName, userEmail))




# Продолжение задание №2 (20 баллов)
#  Ваша программа должна проверить:
# введенное имя на наличие в конце хотя бы одной цифры

# введенный пароль на наличие только чисел
# введенный email на окончание символами ".kg" 
# в случае ошибки выдавать соответствуещее сообщение




# Задание №3 (20 баллов)

# Напишите программу, которое учитывает количество уникальных букв в слове. Уникальные буквы — это те, которые встречаются всего один раз.

 

# Пример 1:

# Введите слово: привет
# Кол-во уникальных букв: 6

# Пример 2:

# Введите слово: лава
# Кол-во уникальных букв: 2

# user1 = input('enter a word: ')
# counter = 0
# for i in user1:
#     if user1.count(i) == 1:
#         counter += 1 
# print(counter)
# Задание №4 (10 баллов)

# Асан слишком ленивый чтобы считать длину окружности и решил написать программу которая будет считать вместо него длину, помогите написать ему программу, которая спрашивает у Асана радиус окружности и выдает (округленный до верхнего значения ответ, если радиус окружности больше или равен 10) ответ (использовать библиотеку math)  
        
while True:
    r = int(input('Asan write here: '))
    c = 2 * 3.14 * r
    if c >= 10:
        print(c)


